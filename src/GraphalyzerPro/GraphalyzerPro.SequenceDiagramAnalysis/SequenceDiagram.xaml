<!--
/*
 * Copyright (c) 2006-2009 by Christoph Menzel, Daniel Birkmaier, 
 * Maximilian Madeja, Farruch Kouliev, Stefan Zoettlein
 *
 * This file is part of the GraphalyzerPro application.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU Affero General Public License as
 * published by the Free Software Foundation, either version 3 of the
 * License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU Affero General Public License for more details.
 *
 * You should have received a copy of the GNU Affero General Public
 * License along with this program. If not, see
 * <http://www.gnu.org/licenses/>.
 */
-->
    
<UserControl x:Class="GraphalyzerPro.SequenceDiagramAnalysis.SequenceDiagram"
             x:Name="SequenceDiagrammUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:viewModels="clr-namespace:GraphalyzerPro.SequenceDiagramAnalysis.ViewModels"
             DataContext="{Binding ElementName=SequenceDiagrammUserControl, Path=ViewModel}"
             mc:Ignorable="d">
    <UserControl.Resources>
        <viewModels:GapToMarginConverter x:Key="GapToMarginConverter"/>
        <viewModels:DurationToHeightConverter x:Key="DurationToHeightConverter"/>
    </UserControl.Resources>
    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" CanContentScroll="True"
MouseEnter="ScrollViewerOnMouseEnter" MouseLeave="ScrollViewerOnMouseLeave" 
                  ScrollChanged="ScrollViewerOnScrollChanged">
        <Grid x:Name="MainGrid">
		<ItemsControl ItemsSource="{Binding Processes}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <Border Margin="5,0,5,0" Padding="5" BorderBrush="Black" BorderThickness="1">
                        <DockPanel>
                            <DockPanel Dock="Top">
                                <TextBlock Text="{Binding ProcessId}" TextAlignment="Center" Margin="0,0,5,5" Padding="5"/>
                            </DockPanel>
                            <ItemsControl ItemsSource="{Binding Threads}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <DockPanel>
                                            <DockPanel Dock="Top">
                                                <Border Margin="5,0,5,0" Padding="5" BorderBrush="Black" BorderThickness="1">
                                                    <TextBlock Text="{Binding ThreadNumber}" HorizontalAlignment="Center"/>
                                                </Border>
                                            </DockPanel>
                                            <Grid Name="ThreadEntries">
                                                <Border BorderThickness="1" BorderBrush="DimGray" HorizontalAlignment="Left" Width="1" Height="{Binding ElementName=ThreadEntries, Path=ActualHeight}" Margin="15,0,0,0"/>
                                                <ItemsControl ItemsSource="{Binding DiagnoseOutputViewModels}"
                                                                VirtualizingStackPanel.IsVirtualizing="True"
                                                                Margin="10,0,0,0">
                                                    <ItemsControl.ItemsPanel>
                                                        <ItemsPanelTemplate>
                                                            <StackPanel />
                                                        </ItemsPanelTemplate>
                                                    </ItemsControl.ItemsPanel>
                                                    <ItemsControl.Resources>
                                                        <DataTemplate DataType="{x:Type viewModels:DiagnoseOutputViewModel}">
                                                            <Grid>
                                                                <Border BorderThickness="1"
                                                                        HorizontalAlignment="Left" Width="11" SnapsToDevicePixels="True">
                                                                    <Border.Margin>
                                                                        <MultiBinding Converter="{StaticResource GapToMarginConverter}">
                                                                            <Binding Path="DataContext.GapAndExtraGap" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Grid}}"/>
                                                                            <Binding Path="DurationPerActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
                                                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
                                                                        </MultiBinding>
                                                                    </Border.Margin>
                                                                    <Border.Height>
                                                                        <MultiBinding Converter="{StaticResource DurationToHeightConverter}">
                                                                            <Binding Path="DataContext.TotalDuration" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Grid}}"/>
                                                                            <Binding Path="DurationPerActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
                                                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
                                                                        </MultiBinding>
                                                                    </Border.Height>
                                                                    <Border.Style>
                                                                        <Style TargetType="{x:Type Border}">
                                                                            <Setter Property="BorderBrush" Value="Black"/>
                                                                            <Setter Property="Background" Value="Beige"/>
                                                                            <Style.Triggers>
                                                                                <DataTrigger Binding="{Binding Type}" Value="Exception">
                                                                                    <Setter Property="BorderBrush" Value="Red"/>
                                                                                    <Setter Property="Background" Value="Red"/>
                                                                                </DataTrigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Border.Style>
                                                                </Border>
                                                                <ItemsControl ItemsSource="{Binding DiagnoseOutputViewModels}" SnapsToDevicePixels="True">
                                                                    <ItemsControl.Margin>
                                                                        <MultiBinding Converter="{StaticResource GapToMarginConverter}" ConverterParameter="5">
                                                                            <Binding Path="DataContext.GapExtraGapAndDuration" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type Grid}}"/>
                                                                            <Binding Path="DurationPerActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
                                                                            <Binding Path="ActualHeight" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type UserControl}}"/>
                                                                        </MultiBinding>
                                                                    </ItemsControl.Margin>
                                                                </ItemsControl>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </ItemsControl.Resources>
                                                </ItemsControl>
                                            </Grid>
                                        </DockPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DockPanel>
                    </Border>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
 <Line x:Name="CrosshairTopLine" HorizontalAlignment="Left" VerticalAlignment="Top"
                  Stroke="Black"
                  Opacity="0.7"
                  StrokeThickness="1"/>
            <Line x:Name="CrosshairBottomLine" HorizontalAlignment="Left" VerticalAlignment="Top"
                  Stroke="Black"
                  Opacity="0.7"
                  StrokeThickness="1"/>
            <Line x:Name="CrosshairLeftLine" HorizontalAlignment="Left" VerticalAlignment="Top"
                  Stroke="Black"
                  Opacity="0.7"
                  StrokeThickness="1"/>
            <Line x:Name="CrosshairRightLine" HorizontalAlignment="Left" VerticalAlignment="Top" 
                  Stroke="Black"
                  Opacity="0.7"
                  StrokeThickness="1"/>
        </Grid>
    </ScrollViewer>
</UserControl>
